%% TASK 1 - Stiffness constrains
clc 
clear

%Extract material moduli 
load expdata.mat
b= 0.0333; %[m]
m= 0.3065; %[kg]
global rhos L w1e w2e tc tf d
L=1.193; %[m]
rhos=m/(L*b); %[kg/m^2]
tf = 0.0015; %[m]
tc = 0.0245;%[m]
d=tf+tc; %[m]
[pks,locs]=findpeaks(expdata(:,2),'MinPeakDistance',1000);
w1e=(expdata(locs(1),1))*(2*pi); %[rad/s]
w2e=(expdata(locs(2),1))*(2*pi); %[rad/s]

% options = optimset('Display','iter');
fun = @objectivefcn;
Ef0=5*10^9;%[N/m^2]
Gc0=3*10^6;%[N/m^2]
x0=[Ef0,Gc0]; 

[x,fval] = fminsearch(fun,x0)
X_Mpa=double(vpa(x*10^-6));


%Material properties

rho_f=1760; %Kg/m^3
rho_c=(rhos-rho_f*2*tf)/tc; %Kg/m^3
Ef=double(X_Mpa(1)); %MPa
Gc=double(X_Mpa(2)); %MPa
Sigma_ult=Ef/64; %MPa
Tau_ult=((rho_c^2)/60788)+(rho_c/70.6)-0.1912; %MPa
Ec=4*Gc-31; %MPa
sigfcr = 0.5*(Ef*Ec*Gc)^(1/3);
nu=0.3;

rho_f=rho_f*10^-9; %kg/mm3
rho_c=rho_c*10^-9; %kg/mm3

clear a b tc tf d x0

%Panel properties -> partially fixed edges
a= 1.75; %m
b= 2.25; %m

%Load

P=80*(a*b)^(-0.3); %kN/m^2

% Set some optimisations options to show intermediate results
% 
options = optimset;
options.Diagnostics = 'on';
options.Display = 'iter';
options.MaxFunEvals = 300;
options.TolFun = 1e-10;
options.TolCon = 1e-10;
options.TolX = 1e-10;
options.Algorithm = 'sqp';

%minimum reinforcement DNV ->hull outside or inside ?? (outside for now)
M_min=(2400*(1+0.0025*(23-20)))*10^-9; %kg/mm^2
tf_min=M_min/(2*rho_f);
xmin=[tf_min,0]; 
x0=[1,40];
w_allow=b*0.02*10^3;

% Perform optimisation

[x,fval,exitflag, output, lambda] = fmincon('objF', x0, [], [], [], [], ...
  xmin , [], 'nlcon_stiff',options,Ef, Gc, a, b, P,nu,rho_f ,rho_c,w_allow);

% Write some results to screen

disp('Design varaibles at optimum :'); x
disp('Objective function at optimum :'); objF(x,Ef, Gc, a, b, P,nu,rho_f ,rho_c,w_allow)
disp('Objective function at initial guess :'); objF(x0,Ef, Gc, a, b, P,nu,rho_f ,rho_c,w_allow)
disp('Constraint values at optimum :')
[g, z] = nlcon_stiff(x,Ef, Gc, a, b, P,nu,rho_f ,rho_c,w_allow)


% Plotstuff

TF = (0.1:0.025:10);
TC = (1:0.25:50);
[TF, TC] = meshgrid(TF, TC);

% Plot objective function (red)

M = rho_f*2*TF + rho_c*TC;
figure(1)
contour(TF, TC, M, 'r')
hold on

% Plot constraint = 0 (blue)

D = TF + TC;
D2 = (Ef.*TF.*D.^2)./(2*(1-nu^2)); 
rho = (pi^2.*D2)./(10^6*Gc.*D.*b^2);
C6 =  4.2 + 12.5*(1 - b/a) - 0.4*(1 - b/a)^2 + 0*(1 - b/a)^3 -2.7*(1 - b/a)^4 -0.4*(1 - b/a)^5;
C7 = 7.5 + 11*(1 - b/a) - 3*(1 - b/a)^2 + -5.5*(1 - b/a)^3 + 0*(1 - b/a)^4 + 2.5*(1 - b/a)^5;
C8 = 0.4 + 0.016*(b/a) + 0.12*(b/a)^2 + 0.78*(b/a)^3 -0.72*(b/a)^4 + 0.026*(b/a)^5;

W = (10^6*P*b^4./D2).*(C6*C8+rho.*C7);
W_plot=W-w_allow;
contour(TF, TC, W_plot,[0,0], 'b')

% Plot initial (blue o) and final (red x) points

plot(x0(1), x0(2), 'bo', 'MarkerSize', 12)
plot( x(1),  x(2), 'rx', 'MarkerSize', 12)

xt = get(gca,'XTick');
set(gca,'XTickLabel', xt)
yt = get(gca,'YTick');
set(gca,'YTickLabel', yt)
xlabel('t_f [mm]')
ylabel('t_c [mm]')

%%------------------------------------------------------------------------------------------------%%
%% TASK 2 - Stiffness and streght constrains
%Safety factors 
FOS_norm=3.33;
FOS_shear=2.5;

% Set some optimisations options to show intermediate results

options = optimset;
options.Diagnostics = 'on';
options.Display = 'iter';
options.MaxFunEvals = 300;
options.TolFun = 1e-10;
options.TolCon = 1e-10;
options.TolX = 1e-10;
options.Algorithm = 'sqp';

xmin=[tf_min,0]; 
x0=[5,20];
w_allow=b*0.02*10^3;

% Perform optimisation

[x,fval,exitflag, output, lambda] = fmincon('objFSS', x0, [], [], [], [], ...
  xmin , [], 'nlcon_SS',options,Ef, Gc, a, b, P,nu,rho_f ,rho_c,w_allow,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear);

% Write some results to screen

disp('Design varaibles at optimum :'); x
disp('Objective function at optimum :'); objFSS(x,Ef, Gc, a, b, P,nu,rho_f ,rho_c,w_allow,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear)
disp('Objective function at initial guess :'); objFSS(x0,Ef, Gc, a, b, P,nu,rho_f ,rho_c,w_allow,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear)
disp('Constraint values at optimum :')
[g, z] = nlcon_SS(x,Ef, Gc, a, b, P,nu,rho_f ,rho_c,w_allow,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear)


% Plotstuff
figure(2)
TF = (0.1:0.025:15);
TC = (1:0.25:100);
[TF, TC] = meshgrid(TF, TC);

% Plot objective function (red)

M = rho_f*2*TF + rho_c*TC;

contour(TF, TC, M, 'r')
hold on

% Plot constraint = 0 (blue)
%wmax
D = TF + TC;
D2 = (Ef.*TF.*D.^2)./(2*(1-nu^2)); 
rho = (pi^2.*D2)./(10^6*Gc.*D.*b^2);
C6 =  4.2 + 12.5*(1 - b/a) - 0.4*(1 - b/a)^2 + 0*(1 - b/a)^3 -2.7*(1 - b/a)^4 -0.4*(1 - b/a)^5;
C7 = 7.5 + 11*(1 - b/a) - 3*(1 - b/a)^2 + -5.5*(1 - b/a)^3 + 0*(1 - b/a)^4 + 2.5*(1 - b/a)^5;
C8 = 0.4 + 0.016*(b/a) + 0.12*(b/a)^2 + 0.78*(b/a)^3 -0.72*(b/a)^4 + 0.026*(b/a)^5;

W1 = (10^6*P*b^4./D2).*(C6*C8+rho.*C7);
W_plot1=W1-w_allow;
contour(TF, TC, W_plot1,[0,0], 'b')

%sigma_max

W=D.*TF;
C2=-0.1*b/a+0.71*(b/a)^2+0.16*(b/a)^3-0.86*(b/a)^4+0.32*(b/a)^5;
C3=0.23+0.6*(1-(b/a))+0.2*(1-(b/a))^2+0.4*(1-(b/a))^3-0.49*(1-(b/a))^4-0.18*(1-(b/a))^5;
CN=C3+nu*C2;
C1S=0.57-0.1*(b/a)+0.8*(b/a)^2+0.3*(b/a)^3-0.8*(b/a)^4+0.19*(b/a)^5;
CNL = C2 + nu*C3;
C1L = 0.96 + 0.17*(1 - b/a) + 0.4*(1 - b/a)^2 + 0.2*(1 - b/a)^3 -0.1*(1 - b/a)^4 -0.18*(1 - b/a)^5;
sigma_f_S=((160*P*b^2)./W)*CN*C1S;
sigma_f_L=((160*P*b^2)./W)*CNL*C1L;
sigma_f_max=max(sigma_f_L,sigma_f_S);
W_plot2=sigma_f_max-(Sigma_ult/FOS_norm);
contour(TF, TC, W_plot2,[0,0], 'g')

%Tau_max

C4=0.65+0.5*(1-b/a)-0.02*(1-b/a)^2-0.13*(1-b/a)^3-0.07*(1-b/a)^4+0.035*(1-b/a)^5;
C5 = 0.65 + 0.17*(1 - b/a) -0.07*(1 - b/a)^2 -0.03*(1 - b/a)^3 +0.01*(1 - b/a)^4 + 0*(1 - b/a)^5;
tau_c_L=((0.52*P*b)./D)*C4;
tau_c_S=((0.52*P*b)./D)*C5;
tau_c_max=max(tau_c_L,tau_c_S);
W_plot3=tau_c_max-(Tau_ult/FOS_shear);
contour(TF, TC, W_plot3,[0,0], 'm')

%sigfcr
W_plot3=sigma_f_max-(sigfcr/FOS_norm);
contour(TF, TC, W_plot3,[0,0], '-.k')



% Plot initial (blue o) and final (red x) points

plot(x0(1), x0(2), 'ko', 'MarkerSize', 12)
plot( x(1),  x(2), 'rx', 'MarkerSize', 12)

xt = get(gca,'XTick');
set(gca,'XTickLabel', xt)
yt = get(gca,'YTick');
set(gca,'YTickLabel', yt)
xlabel('t_f [mm]')
ylabel('t_c [mm]')
%%-------------------------------------------------------------------------%%
%% TASK 3 - Stiffness constrains + STIFFENER 
clear 
clc

%Extract material moduli 
load expdata.mat
b= 0.0333; %[m]
m= 0.3065; %[kg]
global rhos L w1e w2e tc tf d
L=1.193; %[m]
rhos=m/(L*b); %[kg/m^2]
tf = 0.0015; %[m]
tc = 0.0245;%[m]
d=tf+tc; %[m]
[pks,locs]=findpeaks(expdata(:,2),'MinPeakDistance',1000);
w1e=(expdata(locs(1),1))*(2*pi); %[rad/s]
w2e=(expdata(locs(2),1))*(2*pi); %[rad/s]

% options = optimset('Display','iter');
fun = @objectivefcn;
Ef0=5*10^9;%[N/m^2]
Gc0=3*10^6;%[N/m^2]
x0=[Ef0,Gc0]; 

[x,fval] = fminsearch(fun,x0)
X_Mpa=double(vpa(x*10^-6));


%Material properties

rho_f=1760; %Kg/m^3
rho_c=(rhos-rho_f*2*tf)/tc; %Kg/m^3
Ef=double(X_Mpa(1)); %MPa
Gc=double(X_Mpa(2)); %MPa
Sigma_ult=Ef/64; %MPa
Tau_ult=((rho_c^2)/60788)+(rho_c/70.6)-0.1912; %MPa
Ec=4*Gc-31; %MPa
sigfcr = 0.5*(Ef*Ec*Gc)^(1/3);
nu=0.3;

rho_f=rho_f*10^-9; %kg/mm3
rho_c=rho_c*10^-9; %kg/mm3


clearvars -except  Ef Gc nu rho_f rho_c Sigma_ult Tau_ult sigfcr

%Panel dimensions
a= 1.75; %[m]
b = 2.25; %[m]

%Safety factors & max displ
FOS_norm=3.33;
FOS_shear=2.5;
w_allow_plate=(b/2)*0.02*10^3;%[mm]
w_allow_beam=a*0.005*10^3;%[mm]

% Set some optimisations options to show intermediate results

options = optimset;
options.Diagnostics = 'on';
options.Display = 'iter';
options.PlotFcns= 'optimplotfval'; %'optimplotx'
options.MaxFunEvals = 500;
options.MaxIter = 1000;
options.TolFun = 1e-10;
options.TolCon = 1e-10;
options.TolX = 1e-10;
options.Algorithm = 'sqp';

x0=[1,50,100,100,1];
xmin=[0.25,0,0,0,0.25];



% Perform optimisation 

[x,fval,exitflag, output, lambda] = fmincon('objFBS', x0, [], [], [], [], ...
  xmin , [], 'nlcon_B_stiff',options,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,w_allow_beam);

% Write some results to screen

disp('Design varaibles at optimum :'); x
disp('Objective function at optimum :'); objFBS(x,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,w_allow_beam)
disp('Objective function at initial guess :'); objFBS(x0,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,w_allow_beam)
disp('Constraint values at optimum :')
[g, z] = nlcon_B_stiff(x,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,w_allow_beam)

%%-------------------------------------------------------------------------%%

%% TASK 4 - Stiffness & strenght constrains + STIFFENER  
clear 
clc

%Extract material moduli 
load expdata.mat
b= 0.0333; %[m]
m= 0.3065; %[kg]
global rhos L w1e w2e tc tf d
L=1.193; %[m]
rhos=m/(L*b); %[kg/m^2]
tf = 0.0015; %[m]
tc = 0.0245;%[m]
d=tf+tc; %[m]
[pks,locs]=findpeaks(expdata(:,2),'MinPeakDistance',1000);
w1e=(expdata(locs(1),1))*(2*pi); %[rad/s]
w2e=(expdata(locs(2),1))*(2*pi); %[rad/s]

% options = optimset('Display','iter');
fun = @objectivefcn;
Ef0=5*10^9;%[N/m^2]
Gc0=3*10^6;%[N/m^2]
x0=[Ef0,Gc0]; 

[x,fval] = fminsearch(fun,x0)
X_Mpa=double(vpa(x*10^-6));


%Material properties

rho_f=1760; %Kg/m^3
rho_c=(rhos-rho_f*2*tf)/tc; %Kg/m^3
Ef=double(X_Mpa(1)); %MPa
Gc=double(X_Mpa(2)); %MPa
Sigma_ult=Ef/64; %MPa
Tau_ult=((rho_c^2)/60788)+(rho_c/70.6)-0.1912; %MPa
Ec=4*Gc-31; %MPa
sigfcr = 0.5*(Ef*Ec*Gc)^(1/3);
nu=0.3;

rho_f=rho_f*10^-9; %kg/mm3
rho_c=rho_c*10^-9; %kg/mm3


clearvars -except  Ef Gc nu rho_f rho_c Sigma_ult Tau_ult sigfcr

%Panel dimensions
a= 1.75; %[m]
b = 2.25; %[m]

%Safety factors & max displ
FOS_norm=3.33;
FOS_shear=2.5;
w_allow_plate=(b/2)*0.02*10^3;%[mm]
w_allow_beam=a*0.005*10^3;%[mm]

%minimum reinforcement DNV ->hull outside or inside ?? (outside for now)
M_min=(2400*(1+0.0025*(23-20)))*10^-9; %kg/mm^2
fibre_min=M_min/(2*rho_f); 
v_frac=0.5;
t_min=fibre_min/v_frac;


% Set optimisations options to show intermediate results

options = optimset;
options.Diagnostics = 'on';
options.Display = 'iter';
options.PlotFcns= 'optimplotfval'; %''   optimplotx
options.MaxFunEvals = 100000;
options.MaxIter = 1000;
options.TolFun = 1e-10;
options.TolCon = 1e-10;
options.TolX = 1e-10;
options.Algorithm = 'active-set'; %active-set

x0=[1,50];
xmin=[0,0];
% Perform optimisation for plate 

[x,fval,exitflag, output, lambda] = fmincon('objFBSSV2_plate', x0, [], [], [], [], ...
  xmin , [], 'nlcon_B_SS_V2_plate',options,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear);


% Write some results to screen

disp('Design varaibles at optimum :'); x
disp('Objective function at optimum :'); objFBSSV2_plate(x,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear)
disp('Objective function at initial guess :'); objFBSSV2_plate(x0,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear)
disp('Constraint values at optimum :')
[g, z] = nlcon_B_SS_V2_plate(x,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear)


tf_opt=x(1);
tc_opt=x(2);

clear x x0

options = optimset;
options.Diagnostics = 'on';
options.Display = 'iter';
options.PlotFcns= 'optimplotfval'; %''   optimplotx
options.MaxFunEvals = 100000;
options.MaxIter = 1000;
options.TolFun = 1e-10;
options.TolCon = 1e-10;
options.TolX = 1e-10;
options.Algorithm = 'sqp'; %active-set

% Perform optimisation for beam 

x0=[100,100,10];
xmin=[0,0,1];
xmax=[1000,500,1000];
[x,fval,exitflag, output, lambda] = fmincon('objFBSSV2_beam', x0, [], [], [], [], ...
  xmin , xmax, 'nlcon_B_SS_V2_beam',options,Ef,tf_opt,tc_opt, a, b,nu,rho_f ,rho_c,w_allow_beam,Sigma_ult,FOS_norm,FOS_shear);


% Write some results to screen

disp('Design varaibles at optimum :'); x
disp('Objective function at optimum :'); objFBSSV2_beam(x,Ef,tf_opt,tc_opt, a, b,nu,rho_f ,rho_c,w_allow_beam,Sigma_ult,FOS_norm,FOS_shear)
disp('Objective function at initial guess :'); objFBSSV2_beam(x0,Ef,tf_opt,tc_opt, a, b,nu,rho_f ,rho_c,w_allow_beam,Sigma_ult,FOS_norm,FOS_shear)
disp('Constraint values at optimum :')
[g, z] = nlcon_B_SS_V2_beam(x,Ef,tf_opt,tc_opt, a, b,nu,rho_f ,rho_c,w_allow_beam,Sigma_ult,FOS_norm,FOS_shear)


%%------------------------------------------------------------------------------------------------------------------%%

%% TASK 5 - Stiffness & strenght constrains + n# STIFFENER  
clear 
clc

%Extract material moduli 
load expdata.mat
b= 0.0333; %[m]
m= 0.3065; %[kg]
global rhos L w1e w2e tc tf d
L=1.193; %[m]
rhos=m/(L*b); %[kg/m^2]
tf = 0.0015; %[m]
tc = 0.0245;%[m]
d=tf+tc; %[m]
[pks,locs]=findpeaks(expdata(:,2),'MinPeakDistance',1000);
w1e=(expdata(locs(1),1))*(2*pi); %[rad/s]
w2e=(expdata(locs(2),1))*(2*pi); %[rad/s]

% options = optimset('Display','iter');
fun = @objectivefcn;
Ef0=5*10^9;%[N/m^2]
Gc0=3*10^6;%[N/m^2]
x0=[Ef0,Gc0]; 

[x,fval] = fminsearch(fun,x0)
X_Mpa=double(vpa(x*10^-6));


%Material properties

rho_f=1760; %Kg/m^3
rho_c=(rhos-rho_f*2*tf)/tc; %Kg/m^3
Ef=double(X_Mpa(1)); %MPa
Gc=double(X_Mpa(2)); %MPa
Sigma_ult=Ef/64; %MPa
Tau_ult=((rho_c^2)/60788)+(rho_c/70.6)-0.1912; %MPa
Ec=4*Gc-31; %MPa
sigfcr = 0.5*(Ef*Ec*Gc)^(1/3);
nu=0.3;

rho_f=rho_f*10^-9; %kg/mm3
rho_c=rho_c*10^-9; %kg/mm3


clearvars -except  Ef Gc nu rho_f rho_c Sigma_ult Tau_ult sigfcr

%Safety factors & max displ
FOS_norm=3.33;
FOS_shear=2.5;


%minimum reinforcement DNV ->hull outside or inside ?? (outside for now)
M_min=(2400*(1+0.0025*(23-20)))*10^-9; %kg/mm^2
fibre_min=M_min/(2*rho_f); 
v_frac=0.5;
t_min=fibre_min/v_frac;

for n=2:21
    
clear x x0

%Panel dimensions
a= 1.75; %[m]
b = 2.25/n; %[m]

w_allow_plate=min(a,b)*0.02*10^3;%[mm]
w_allow_beam=a*0.005*10^3;%[mm]

% Set optimisations options to show intermediate results

options = optimset;
options.Diagnostics = 'on';
options.Display = 'iter';
options.PlotFcns= 'optimplotfval'; %''   optimplotx
options.MaxFunEvals = 100000;
options.MaxIter = 1000;
options.TolFun = 1e-10;
options.TolCon = 1e-10;
options.TolX = 1e-10;
options.Algorithm = 'active-set'; %active-set

x0=[1,50];
xmin=[t_min,1];

% Perform optimisation for plate 

[x,fval,exitflag, output, lambda] = fmincon('objFBSS4_plate', x0, [], [], [], [], ...
  xmin , [], 'nlcon_B_SS4_plate',options,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear);


% Write some results to screen

disp('Design varaibles at optimum :'); x
disp('Objective function at optimum :'); objFBSS4_plate(x,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear)
disp('Objective function at initial guess :'); objFBSS4_plate(x0,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear)
disp('Constraint values at optimum :')
[g, z] = nlcon_B_SS4_plate(x,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear)


tf_opt=x(1);
tc_opt=x(2);

clear x x0

options = optimset;
options.Diagnostics = 'on';
options.Display = 'iter';
options.PlotFcns= 'optimplotfval'; %''   optimplotx
options.MaxFunEvals = 100000;
options.MaxIter = 1000;
options.TolFun = 1e-10;
options.TolCon = 1e-10;
options.TolX = 1e-10;
options.Algorithm = 'sqp'; %active-set

% Perform optimisation for beam 

x0=[100,100,10];
xmin=[10,0,1];
xmax=[1000,500,1000];
[x,fval,exitflag, output, lambda] = fmincon('objFBSS4_beam', x0, [], [], [], [], ...
  xmin , xmax, 'nlcon_B_SS4_beam',options,Ef,tf_opt,tc_opt, a, b,n,nu,rho_f ,rho_c,w_allow_beam,Sigma_ult,FOS_norm,FOS_shear);


% Write some results to screen

disp('Design varaibles at optimum :'); x
disp('Objective function at optimum :'); objFBSS4_beam(x,Ef,tf_opt,tc_opt, a, b,n,nu,rho_f ,rho_c,w_allow_beam,Sigma_ult,FOS_norm,FOS_shear)
disp('Objective function at initial guess :'); objFBSS4_beam(x0,Ef,tf_opt,tc_opt, a, b,n,nu,rho_f ,rho_c,w_allow_beam,Sigma_ult,FOS_norm,FOS_shear)
disp('Constraint values at optimum :')
[g, z] = nlcon_B_SS4_beam(x,Ef,tf_opt,tc_opt, a, b,n,nu,rho_f ,rho_c,w_allow_beam,Sigma_ult,FOS_norm,FOS_shear)

X(:,n-1)=[tf_opt;tc_opt;x(1);x(2);x(3);objFBSS4_beam(x,Ef,tf_opt,tc_opt, a, b,n,nu,rho_f ,rho_c,w_allow_beam,Sigma_ult,FOS_norm,FOS_shear)];
n=n+1;
endthe 3

[Mass_min,Index] = min(X(6,:),[],'linear');
Opt_solution=[Index,X(1,Index),X(2,Index),X(3,Index),X(4,Index),X(5,Index),X(6,Index)];
fprintf('The optimum solution is with %d stiffner and weight %f kg. Tf=%f mm , tc=%f mm, Af=%f mm2, h=%f mm and tw=%f mm',Opt_solution(1),Opt_solution(7),Opt_solution(2),Opt_solution(3),Opt_solution(4),Opt_solution(5),Opt_solution(6));

axes=[0:1:20];
Q=[46.189,X(6,:)];
plot(axes,Q,'ko-','LineWidth', 1);
xlabel('Number of Stiffeners');
ylabel('Mass [kg]');
xticks(0:1:20)
hold on 
plot(axes(4),Q(4),'ro','LineWidth', 3);






%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                        %FUNCTIONS%                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


function m = objF(x,Ef, Gc, a, b, P,nu,rho_f ,rho_c,w_allow)  

  tf = x(1);  
  tc = x(2);  
  m =rho_f*2*tf + rho_c*tc;



function [g, z] = nlcon_stiff(x,Ef, Gc, a, b, P,nu,rho_f ,rho_c,w_allow)
  
  props=[P,a,b,Ef,Gc,nu];
  k=plate(x,props);
  w_max=k(1); 
  g=w_max-w_allow;
  z = 0;
  
  

function m = objFSS(x,Ef, Gc, a, b, P,nu,rho_f ,rho_c,w_allow,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear)  

  tf = x(1);  
  tc = x(2);  
  m =rho_f*2*tf + rho_c*tc;
  
  
  
function [g, z] = nlcon_SS(x,Ef, Gc, a, b, P,nu,rho_f ,rho_c,w_allow,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear)
  
  props=[P,a,b,Ef,Gc,nu];
  k=plate(x,props);
   
  g(1)=k(1)-w_allow;
  g(2)=k(2)-(Sigma_ult/FOS_norm);
  g(3)=k(3)-(Tau_ult/FOS_shear);
  g(4)=k(2)-(sigfcr/FOS_norm);
 
  z = 0;
  
function m = objFBS(x,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,w_allow_beam)  

  tf = x(1);  %[mm]
  tc = x(2);  %[mm]
  Af = x(3);  %[mm]
  h  = x(4);  %[mm]
  tw = x(5);  %[mm]

  m_plate=(((rho_f*(2*tf) + rho_c*tc))*((a*1000)*(b*1000)));%[kg]
  m_beam=((tw*h+Af)*(a*1000))*rho_f;%[kg]

  m =m_plate+m_beam; %[kg]
  
function [g, z] = nlcon_B_stiff(x,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,w_allow_beam)
  
  tf = x(1);  
  tc = x(2);  
  Af = x(3);
  h  = x(4);
  tw = x(5);
  
  y=[tf,tc];
  
  a=a*1000;
  b=b*1000;
  
  b_eff =b*(1/(1+10*((b)/(0.58*a))^2)); %[mm] ORIGINAL B
  AP=(a/1000)*((b/2)/1000); %[m^2] 
  
  Press_beam=80*(AP)^(-0.3); %[kPa]
  P_beam=(Press_beam/1000)*(b_eff); %[N/mm]
  
  D_beam=(Ef*Af*b_eff*tf*h^2)/(Af+b_eff*tf); %[Nmm^2]
  G_beam=Ef/(1+2*nu); %[MPa]
  S_beam=G_beam*tw*h; %[N]
  
  A=a/2;
  w_beam_max=((P_beam*(a^4))/(24*D_beam))*((A/a)^4-2*(A/a)^3+(A/a)^2)+(P_beam/(2*S_beam))*(a*A-(A)^2); 
  
  P_plate=80*((a/1000)*(b/2000))^(-0.3); %[kPa]
  props=[P_plate,a/1000,b/2000,Ef,Gc,nu];
  k=plate(y,props);  
  w_plate_max=k(1);
  
  g(1)=w_plate_max-w_allow_plate;
  g(2)=w_beam_max-w_allow_beam;
  
  z = 0;
  
function m = objFBSSV2_plate(x,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear)  

  tf = x(1);  %[mm]
  tc = x(2);  %[mm]

  m_plate=(((rho_f*(2*tf) + rho_c*tc))*((a*1000)*(b*1000)));%[kg]

  m =m_plate; %[kg]    
  
function m = objFBSSV2_beam(x,Ef,tf_opt,tc_opt, a, b,nu,rho_f ,rho_c,w_allow_beam,Sigma_ult,FOS_norm,FOS_shear)  

  Af = x(1);  %[mm]
  h  = x(2);  %[mm]
  tw = x(3);  %[mm]

  m_plate=(((rho_f*(2*tf_opt) + rho_c*tc_opt))*((a*1000)*(b*1000)));%[kg]
  m_beam=((tw*h+Af)*(a*1000))*rho_f;%[kg]

  m =m_plate+m_beam; %[kg] 
  
function [g, z] = nlcon_B_SS_V2_plate(x,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear)
  
  a=a*1000; %m to mm
  b=b*1000; %m to mm
  
  %Plate
  P_plate=80*((a/1000)*(b/2000))^(-0.3); %[kPa]
  props=[P_plate,a/1000,b/2000,Ef,Gc,nu];
  k=plate(x,props);  
  w_plate_max=k(1);
  sigma_plate=k(2);
  tau_plate=k(3);
  
  %constrains
  g(1)=w_plate_max-w_allow_plate;
  g(2)=sigma_plate-(Sigma_ult/FOS_norm);
  g(3)=tau_plate-(Tau_ult/FOS_shear);
  g(4)=sigma_plate-(sigfcr/FOS_norm);
 
  
  z = 0;
  
function [g, z] = nlcon_B_SS_V2_beam(x,Ef,tf_opt,tc_opt, a, b,nu,rho_f ,rho_c,w_allow_beam,Sigma_ult,FOS_norm,FOS_shear)
  
  Af = x(1);  %[mm]
  h  = x(2);  %[mm]
  tw = x(3);  %[mm]
  
  a=a*1000; %m to mm
  b=b*1000; %m to mm

  
  %deflection
  b_eff =b*(1/(1+10*((b)/(0.58*a))^2)); %[mm] ORIGINAL B
  AP=(a/1000)*((b/2)/1000); %[m^2]
  
  Press_beam=80*(AP)^(-0.3); %[kPa]
  P_beam=(Press_beam/1000)*(b_eff); %[N/mm]
  
  D_beam=(Ef*Af*b_eff*tf_opt*h^2)/(Af+b_eff*tf_opt); %[Nmm^2]
  G_beam=Ef/(1+2*nu); %[MPa]
  S_beam=G_beam*tw*h; %[N]
  
  A=a/2;
  w_beam_max=((P_beam*(a^4))/(24*D_beam))*((A/a)^4-2*(A/a)^3+(A/a)^2)+(P_beam/(2*S_beam))*(a*A-(A)^2); 
 
  %stresses
  T_max=abs((P_beam/2)*(a)); %max @x=0 & x=a
  M_max=abs(-(P_beam*a^2)/12); %max @x=0 & x=a 
  y_=(Af*h)/((b_eff*tf_opt)+Af);
  e=h-y_;
  
  I_xx_boom1=Af*e^2;                             % Second moment of inertia upper flange
  I_xx_boom2=(b_eff*tf_opt)*y_^2;                % Second moment of inertia lower flange
  
  I_xx=I_xx_boom1+I_xx_boom2;
  
  sigma_beam1=(M_max/I_xx)*e;                        
  sigma_beam2=(M_max/I_xx)*y_;
  sigma_beam=max(sigma_beam1,sigma_beam2);
 
  tau_beam= (1.5*T_max)/(h*tw);  
  
  %constrains
  
  g(1)=w_beam_max-w_allow_beam;
  g(2)=sigma_beam-(Sigma_ult/FOS_norm);
  g(3)=tau_beam-((Sigma_ult*0.05)/FOS_shear);
  
  z = 0;
  
  
function m = objFBSS4_plate(x,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear)  

  tf = x(1);  %[mm]
  tc = x(2);  %[mm]

  m_plate=(((rho_f*(2*tf) + rho_c*tc))*((a*1000)*(b*1000)));%[kg]

  m =m_plate; %[kg]  
  
function m = objFBSS4_beam(x,Ef,tf_opt,tc_opt, a, b,n,nu,rho_f ,rho_c,w_allow_beam,Sigma_ult,FOS_norm,FOS_shear)  

  Af = x(1);  %[mm]
  h  = x(2);  %[mm]
  tw = x(3);  %[mm]

  m_plate=(((rho_f*(2*tf_opt) + rho_c*tc_opt))*((a*1000)*(b*1000)));%[kg]
  m_beam=n*(((tw*h+Af)*(a*1000))*rho_f);%[kg]

  m =m_plate+m_beam; %[kg]  
  
  
function [g, z] = nlcon_B_SS4_plate(x,Ef, Gc, a, b,nu,rho_f ,rho_c,w_allow_plate,Sigma_ult,Tau_ult,sigfcr,FOS_norm,FOS_shear)
  
  %Plate
  P_plate=80*((a)*(b))^(-0.3); %[kPa]
  props=[P_plate,a,b,Ef,Gc,nu];
  k=plate(x,props);  
  w_plate_max=k(1);
  sigma_plate=k(2);
  tau_plate=k(3);
  
  %constrains
  g(1)=w_plate_max-w_allow_plate;
  g(2)=sigma_plate-(Sigma_ult/FOS_norm);
  g(3)=tau_plate-(Tau_ult/FOS_shear);
  g(4)=sigma_plate-(sigfcr/FOS_norm);
 
  z = 0;  

 function [g, z] = nlcon_B_SS4_beam(x,Ef,tf_opt,tc_opt, a, b,n,nu,rho_f ,rho_c,w_allow_beam,Sigma_ult,FOS_norm,FOS_shear)
  
  Af = x(1);  %[mm]
  h  = x(2);  %[mm]
  tw = x(3);  %[mm]
  
  a=a*1000; %m to mm
  b=b*1000; %m to mm

  
  %deflection
  b_eff =(b*n)*(1/(1+10*((b*n)/(0.58*a))^2)); %[mm] ORIGINAL B
  AP=(a/1000)*(b/1000); %[m^2] 
  
  Press_beam=80*(AP)^(-0.3); %[kPa]
  P_beam=(Press_beam/1000)*(b_eff); %[N/mm]
  
  D_beam=(Ef*Af*b_eff*tf_opt*h^2)/(Af+b_eff*tf_opt); %[Nmm^2]
  G_beam=Ef/(1+2*nu); %[MPa]
  S_beam=G_beam*tw*h; %[N]
  
  A=a/2;
  w_beam_max=((P_beam*(a^4))/(24*D_beam))*((A/a)^4-2*(A/a)^3+(A/a)^2)+(P_beam/(2*S_beam))*(a*A-(A)^2); 
 
  %stresses
  T_max=abs((P_beam/2)*(a)); %max @x=0 & x=a
  M_max=abs(-(P_beam*a^2)/12); %max @x=0 & x=a 
  y_=(Af*h)/((b_eff*tf_opt)+Af);
  e=h-y_;
  
  I_xx_boom1=Af*e^2;                             % Second moment of inertia upper flange
  I_xx_boom2=(b_eff*tf_opt)*y_^2;                % Second moment of inertia lower flange
  
  I_xx=I_xx_boom1+I_xx_boom2;
  
  sigma_beam1=(M_max/I_xx)*e;                        
  sigma_beam2=(M_max/I_xx)*y_;
  sigma_beam=max(sigma_beam1,sigma_beam2);
 
  tau_beam= (1.5*T_max)/(h*tw);  
  
  %constrains
  
  g(1)=w_beam_max-w_allow_beam;
  g(2)=sigma_beam-(Sigma_ult/FOS_norm);
  g(3)=tau_beam-((Sigma_ult*0.05)/FOS_shear);
  
  z = 0;
